// Generated by view binder compiler. Do not edit!
package com.example.mint.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.mint.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSettingsBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final Button badgesButton;

  @NonNull
  public final ImageView logoIv;

  @NonNull
  public final LinearLayout mainLL;

  @NonNull
  public final EditText maxGoalEditText;

  @NonNull
  public final EditText minGoalEditText;

  @NonNull
  public final Button saveButton;

  @NonNull
  public final TextView titleTv;

  private FragmentSettingsBinding(@NonNull FrameLayout rootView, @NonNull Button badgesButton,
      @NonNull ImageView logoIv, @NonNull LinearLayout mainLL, @NonNull EditText maxGoalEditText,
      @NonNull EditText minGoalEditText, @NonNull Button saveButton, @NonNull TextView titleTv) {
    this.rootView = rootView;
    this.badgesButton = badgesButton;
    this.logoIv = logoIv;
    this.mainLL = mainLL;
    this.maxGoalEditText = maxGoalEditText;
    this.minGoalEditText = minGoalEditText;
    this.saveButton = saveButton;
    this.titleTv = titleTv;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSettingsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_settings, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSettingsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.badgesButton;
      Button badgesButton = ViewBindings.findChildViewById(rootView, id);
      if (badgesButton == null) {
        break missingId;
      }

      id = R.id.logoIv;
      ImageView logoIv = ViewBindings.findChildViewById(rootView, id);
      if (logoIv == null) {
        break missingId;
      }

      id = R.id.mainLL;
      LinearLayout mainLL = ViewBindings.findChildViewById(rootView, id);
      if (mainLL == null) {
        break missingId;
      }

      id = R.id.maxGoalEditText;
      EditText maxGoalEditText = ViewBindings.findChildViewById(rootView, id);
      if (maxGoalEditText == null) {
        break missingId;
      }

      id = R.id.minGoalEditText;
      EditText minGoalEditText = ViewBindings.findChildViewById(rootView, id);
      if (minGoalEditText == null) {
        break missingId;
      }

      id = R.id.saveButton;
      Button saveButton = ViewBindings.findChildViewById(rootView, id);
      if (saveButton == null) {
        break missingId;
      }

      id = R.id.titleTv;
      TextView titleTv = ViewBindings.findChildViewById(rootView, id);
      if (titleTv == null) {
        break missingId;
      }

      return new FragmentSettingsBinding((FrameLayout) rootView, badgesButton, logoIv, mainLL,
          maxGoalEditText, minGoalEditText, saveButton, titleTv);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
